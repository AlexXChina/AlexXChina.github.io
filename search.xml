<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>一罐产品分析</title>
      <link href="/2018/10/13/%E4%B8%80%E7%BD%90%E4%BA%A7%E5%93%81%E5%88%86%E6%9E%90/"/>
      <url>/2018/10/13/%E4%B8%80%E7%BD%90%E4%BA%A7%E5%93%81%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<h2 id="一、产品概述"><a href="#一、产品概述" class="headerlink" title="一、产品概述"></a>一、产品概述</h2><h3 id="1-1-使用环境"><a href="#1-1-使用环境" class="headerlink" title="1.1 使用环境"></a>1.1 使用环境</h3><p>体验机型：iphone 6s</p><p>系统版本：ios 11.2.6</p><p>APP版本：1.3.3</p><p>体验时间：2018.10.11</p><h3 id="1-2-产品介绍"><a href="#1-2-产品介绍" class="headerlink" title="1.2 产品介绍"></a>1.2 产品介绍</h3><p><img src="https://upload-images.jianshu.io/upload_images/838058-9206ea43d3f75a9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一罐.png"></p><p>产品名称：一罐</p><p>产品类型：匿名社交</p><p>产品slogan：为社交恐惧定制的社交APP。</p><p>宣传文案：当代青年匿名社交，在绝对私密的树洞里吐露心声。那些朋友圈不能说的心事，也可以隐藏身份对着树洞倾诉，把情绪装进罐头里。<br>有时候我们倾诉心声，不是为了得到帮助或者答案，只想此刻能有人陪伴。<br>陌生人短暂而温暖的相遇。</p><h3 id="1-3-用户群分析"><a href="#1-3-用户群分析" class="headerlink" title="1.3 用户群分析"></a>1.3 用户群分析</h3><p>以95后、00后用户为主要人群，对社交恐惧症的人群较为友好。</p><h2 id="二、产品分析"><a href="#二、产品分析" class="headerlink" title="二、产品分析"></a>二、产品分析</h2><h3 id="2-1-产品结构"><a href="#2-1-产品结构" class="headerlink" title="2.1 产品结构"></a>2.1 产品结构</h3><p><img src="https://upload-images.jianshu.io/upload_images/838058-ca92ca915069332f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一罐产品分析.png"></p><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><h3 id="3-1-使用感受"><a href="#3-1-使用感受" class="headerlink" title="3.1 使用感受"></a>3.1 使用感受</h3><p>用户发布的东西都被称之为“情绪”，放入罐头中。</p><p>用户把罐头扔进“海”里面后，可以选择不互动。</p><p>界面设计简洁，配色显示沉郁，整体看起来比较舒服。比较注意小细节设计，非常的温情。</p><p>整体产品使用起来也表达出产品团队对于陌生人之间细腻感情的微妙处理。</p><p>开辟了一块对需要宣泄而无处宣泄情感的年轻人的静谧之地。</p>]]></content>
      
      
        <tags>
            
            <tag> 产品分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>产品设计开发流程</title>
      <link href="/2018/07/11/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
      <url>/2018/07/11/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p><img src="http://xiaohao.info/image/流程图.png" alt></p>]]></content>
      
      
        <tags>
            
            <tag> 产品 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>反击爬虫，前端工程师的脑洞可以多大？</title>
      <link href="/2018/07/04/%E5%8F%8D%E5%87%BB%E7%88%AC%E8%99%AB%EF%BC%8C%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%84%91%E6%B4%9E%E5%8F%AF%E4%BB%A5%E5%A4%9A%E5%A4%A7/"/>
      <url>/2018/07/04/%E5%8F%8D%E5%87%BB%E7%88%AC%E8%99%AB%EF%BC%8C%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%84%91%E6%B4%9E%E5%8F%AF%E4%BB%A5%E5%A4%9A%E5%A4%A7/</url>
      <content type="html"><![CDATA[<p>一、前言<br>对于一张网页，我们往往希望它是结构良好，内容清晰的，这样搜索引擎才能准确地认知它。而反过来，又有一些情景，我们不希望内容能被轻易获取，比方说电商网站的交易额，教育网站的题目等。因为这些内容，往往是一个产品的生命线，必须做到有效地保护。这就是<strong>爬虫与反爬虫</strong>这一话题的由来。<br><a href="http://litten.me/2017/07/09/prevent-spiders/#2-常见反爬虫策略" target="_blank" rel="noopener"></a></p><p>二、常见反爬虫策略<br>但是世界上没有一个网站，能做到完美地反爬虫。<br>如果页面希望能在用户面前正常展示，同时又不给爬虫机会，就必须要做到识别真人与机器人。因此工程师们做了各种尝试，这些策略大多采用于<strong>后端</strong>，也是目前比较常规单有效的手段，比如：<br>User-Agent + Referer检测<br>账号及Cookie验证<br>验证码<br>IP限制频次</p><p>而爬虫是可以无限逼近于真人的，比如：<br>chrome headless或phantomjs来模拟浏览器环境<br><a href="http://udn.yyuap.com/doc/ae/920457.html" target="_blank" rel="noopener">tesseract</a>识别验证码<br>代理IP淘宝就能买到</p><p>所以我们说，100%的反爬虫策略？不存在的。更多的是体力活，是个难易程度的问题。<br>不过作为前端工程师，我们可以增加一下游戏难度，设计出一些<strong>很(sang)有(xin)意(bing)思(kuang)</strong>的反爬虫策略。<br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-前端与反爬虫" target="_blank" rel="noopener"></a></p><p>三、前端与反爬虫<br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-1-font-face拼凑式" target="_blank" rel="noopener"></a></p><p>3.1 FONT-FACE拼凑式<br><strong>例子：<a href="http://maoyan.com/films/342601" target="_blank" rel="noopener">猫眼电影</a></strong><br>猫眼电影里，对于票房数据，展示的并不是纯粹的数字。页面使用了font-face定义了字符集，并通过unicode去映射展示。也就是说，除去图像识别，必须同时爬取字符集，才能识别出数字。<br><img src="http://upload-images.jianshu.io/upload_images/838058-4df9d6fadba8b7f2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>并且，每次刷新页面，字符集的url都是有变化的，无疑更大难度地增加了爬取成本。<br><img src="http://upload-images.jianshu.io/upload_images/838058-05d7b3f4d60e2dd0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-2-background拼凑式" target="_blank" rel="noopener"></a></p><p>3.2 BACKGROUND拼凑式<br><strong>例子：<a href="http://www.meituan.com/dianying/342601?#content" target="_blank" rel="noopener">美团</a></strong><br>与font的策略类似，美团里用到的是background拼凑。数字其实是图片，根据不同的background偏移，显示出不同的字符。<br><img src="http://upload-images.jianshu.io/upload_images/838058-0e9efd2529b0a580?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>并且不同页面，图片的字符排序也是有区别的。不过理论上只需生成0-9与小数点，为何有重复字符就不是很懂。<br>页面A：<img src="http://upload-images.jianshu.io/upload_images/838058-d8aea046fa3bfa1a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt>页面B：<img src="http://upload-images.jianshu.io/upload_images/838058-fbc73b84a4960aeb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-3-字符穿插式" target="_blank" rel="noopener"></a></p><p>3.3 字符穿插式<br><strong>例子：<a href="https://mp.weixin.qq.com/s?__biz=MzI0MDYwNjk2OA==&amp;mid=2247484365&amp;idx=4&amp;sn=291a93e8a4ce6e90d3b6ef8b98fe09c4&amp;chksm=e919085ade6e814cc037ecf6a873f22da0e492911a4e539e6f8fdeff022806b4d248c4d54194&amp;scene=4" target="_blank" rel="noopener">微信公众号文章</a></strong><br>某些微信公众号的文章里，穿插了各种迷之字符，并且通过样式把这些字符隐藏掉。这种方式虽然令人震惊…但其实没有太大的识别与过滤难度，甚至可以做得更好，不过也算是一种脑洞吧。<img src="http://upload-images.jianshu.io/upload_images/838058-bfdb5f8334dd03ea?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>对了，我的手机流量可以找谁报销吗？<br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-4-伪元素隐藏式" target="_blank" rel="noopener"></a></p><p>3.4 伪元素隐藏式<br><strong>例子：<a href="http://car.autohome.com.cn/config/series/3170.html" target="_blank" rel="noopener">汽车之家</a></strong><br>汽车之家里，把关键的厂商信息，做到了伪元素的content里。这也是一种思路：爬取网页，必须得解析css，需要拿到伪元素的content，这就提升了爬虫的难度。<br><img src="http://upload-images.jianshu.io/upload_images/838058-bdbcb905480efb55?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-5-元素定位覆盖式" target="_blank" rel="noopener"></a></p><p>3.5 元素定位覆盖式<br><strong>例子：<a href="https://flight.qunar.com/site/oneway_list.htm?searchDepartureAirport=%E5%B9%BF%E5%B7%9E&amp;searchArrivalAirport=%E5%8C%97%E4%BA%AC&amp;searchDepartureTime=2017-07-06&amp;searchArrivalTime=2017-07-09&amp;nextNDays=0&amp;startSearch=true&amp;fromCode=CAN&amp;toCode=BJS&amp;from=qunarindex&amp;lowestPrice=null" target="_blank" rel="noopener">去哪儿</a></strong><br>还有热爱数学的去哪儿，对于一个4位数字的机票价格，先用四个i<br>标签渲染，再用两个b<br>标签去绝对定位偏移量，覆盖故意展示错误的i<br>标签，最后在视觉上形成正确的价格…<br><img src="http://upload-images.jianshu.io/upload_images/838058-8432c05b25f5f8ac?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>这说明爬虫会解析css还不行，还得会做数学题。<br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-6-iframe异步加载式" target="_blank" rel="noopener"></a></p><p>3.6 IFRAME异步加载式<br><strong>例子：<a href="http://music.163.com/#/song?id=424477863" target="_blank" rel="noopener">网易云音乐</a></strong><br>网易云音乐页面一打开，html源码里几乎只有一个iframe<br>，并且它的src是空白的：about:blank<br>。接着js开始运行，把整个页面的框架异步塞到了iframe里面…<br><img src="http://upload-images.jianshu.io/upload_images/838058-741a0a7b9c7ad5d3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>不过这个方式带来的难度并不大，只是在异步与iframe处理上绕了个弯（或者有其他原因，不完全是基于反爬虫考虑），无论你是用selenium还是phantom，都有API可以拿到iframe里面的content信息。<br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-7-字符分割式" target="_blank" rel="noopener"></a></p><p>3.7 字符分割式<br><strong>例子：<a href="http://www.goubanjia.com/" target="_blank" rel="noopener">全网代理IP</a></strong><br>在一些展示代理IP信息的页面，对于IP的保护也是大费周折。<br><img src="http://upload-images.jianshu.io/upload_images/838058-6913a9b4819428e0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>他们会先把IP的数字与符号分割成dom节点，再在中间插入迷惑人的数字，如果爬虫不知道这个策略，还会以为自己成功拿到了数值；不过如果爬虫注意到，就很好解决了。<br><a href="http://litten.me/2017/07/09/prevent-spiders/#3-8-字符集替换式" target="_blank" rel="noopener"></a></p><p>3.8 字符集替换式<br><strong>例子：<a href="https://m.flight.qunar.com/ncs/page/flightlist?depCity=%E5%8C%97%E4%BA%AC&amp;arrCity=%E4%B8%8A%E6%B5%B7&amp;goDate=2017-07-05&amp;backDate=&amp;sort=&amp;airLine=&amp;from=" target="_blank" rel="noopener">去哪儿移动侧</a></strong><br>同样会欺骗爬虫的还有去哪儿的移动版。<br><img src="http://upload-images.jianshu.io/upload_images/838058-710da01a19d4865a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>html里明明写的3211，视觉上展示的却是1233。原来他们重新定义了字符集，3与1的顺序刚好调换得来的结果…<br><img src="http://upload-images.jianshu.io/upload_images/838058-76e7371b283dbdd7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>本文转载于：<a href="http://litten.me/2017/07/09/prevent-spiders/" target="_blank" rel="noopener">Litten的博客</a></p>]]></content>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>评论的小小套路</title>
      <link href="/2018/07/04/%E8%AF%84%E8%AE%BA%E7%9A%84%E5%B0%8F%E5%B0%8F%E5%A5%97%E8%B7%AF/"/>
      <url>/2018/07/04/%E8%AF%84%E8%AE%BA%E7%9A%84%E5%B0%8F%E5%B0%8F%E5%A5%97%E8%B7%AF/</url>
      <content type="html"><![CDATA[<p>评论结构类型</p><p><strong>一、只能评论，不能对评论进行回复</strong></p><p>不让回复的评论结构是最简单的结构，评论一扯上回复，就会涉及到回复的回复，回复的回复的回复……（子子孙孙无穷尽也）后面说的几种评论结构也都基本是关于怎么显示评论回复的。这种结构很简单，但是缺点在于评论区不会有任何互动，适用于要么不是很重视评论，有个简单的评论功能就行，还能节省开发时间；要么非常重视评论（评论区一言不合吵起来的情况真是屡见不鲜，说多了都是泪），希望大家能深思熟虑之后再做评论，比如豆瓣，或者是有问答之类另外交流渠道的应用使用。</p><p>使用不能回复的评论结构的应用有：pp助手、豌豆荚、豆瓣的短评（豆瓣不同地方的评论使用的结构不一样，后面会再提到）</p><p>豆瓣的短评，不支持回复：</p><p><img src="http://upload-images.jianshu.io/upload_images/838058-152bb584226e234c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><strong>二、盖楼式评论</strong></p><p>盖楼式评论顾名思义就是利用评论来盖楼，每一条回复都会连同前面所有的评论和回复一起生成一条新的评论，这种评论样式的好处一是能看到所有回复的内容，整个评论看起来比较连贯，二是对于那些对评论区比较重视的应用（或者老板），使用盖楼评论时，评论区看起来会比较火爆。</p><p>当然这种方式也有缺点，正所谓上帝要让你毁灭，必先让你疯狂，盖楼式评论的弊端和评论的回复量是成正比关系的，一条评论回复越多，盖楼式评论越显得力不从心。首当其冲的就是评论会堆积大量的相同内容，解决办法有两种，一种是折叠中间的评论内容，另一种是在生成新评论的同时将被评论的整条评论删除，不过这种方式在处理中间评论，比如一条评论有 10 条回复，然后你回复第 5 条的时候，原本的十条评论要不要删除的问题上比较纠结，所以现在使用最多的还是折叠的方式，比如：网易新闻客户端。</p><p>网易新闻客户端使用的折叠楼层的方式：</p><p><img src="http://upload-images.jianshu.io/upload_images/838058-6d5c7ae6abbfbcee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>其次是内容显示的问题，盖楼式评论为了显示出楼层的效果，一般回进行一定程度的缩进，越往前的楼层缩进越多，所以当一条评论达到成百上千楼的时候，最前面的评论已经缩进的不能看了，当然这种评论出现的几率是非常小的。因为这两个问题的存在，加之盖楼式评论结构比其他方式复杂一些，所以使用这种方式的应用并不多。</p><p><strong>三、主题式评论（或者叫贴吧式评论）</strong></p><p>主题式评论将评论本身作为一个主题，将对该评论的所有回复，以及对回复内容的回复全部都显示在这个主题范围内，这种方式很像贴吧的展示形式，所以也叫贴吧式评论。</p><p>主题式评论的好处在于评论区会显得比较整洁，缺点在于如果用户不点击进评论的详情页去，就看不到回复内容，针对这个缺点，很多客户端的处理方式是将部分回复内容显示在出来，引导用户去点击，比如：优酷客户端。</p><p>优酷客户端将部分回复内容展示出来：</p><p><img src="http://upload-images.jianshu.io/upload_images/838058-af766d9d2afcec2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>主题式是使用的比较广泛的一种结构样式，类似：简书，微博、京东（不写这个我还完全不知道京东的评论是能回复的~天猫要赶紧跟上啊）。对于主题式评论，还有一个设计小技巧，就是将回复内容都放在一起，一般来说，客户端都习惯于将最新的评论放在最上面，但是这造成的一个后果就是，如果在两个人的回复中间插入了别人的回复，阅读起来就会不连贯。QQ空间就是将两个人的对话放在一起，阅读起来就会非常方便连贯。</p><p><strong>四、截取式评论</strong></p><p>回复的内容，连同被回复的那条内容（不管这条内容是原本的评论，还是评论的回复）生成一条新的评论，这种方式可以看做是针对盖楼式评论的两个缺点做的一种优化，不会在评论区产生过多的冗余内容，也不用担心显示的问题，但只保留最后一条评论的做法，一定程度上也牺牲了阅读的连贯性，所以这种方式使用的客户端不多，比如：网易云音乐（下面第一条就是对第三条的回复），但网易云音乐这种回复内容在上，被回复内容在下的显示方式，还是不符合正常的阅读习惯，而且两条评论都@了被回复的人，显得有些多余。</p><p>网易云音乐客户端使用的截取式评论：</p><p><img src="http://upload-images.jianshu.io/upload_images/838058-0ca30b287352584d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>相比之下，虎扑体育客户端使用的截取式评论的显示方式貌似更加合理，阅读起来更加顺畅。<br>【转载】</p>]]></content>
      
      
        <tags>
            
            <tag> 产品 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>面向B端的产品经理</title>
      <link href="/2018/07/04/%E9%9D%A2%E5%90%91B%E7%AB%AF%E7%9A%84%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/"/>
      <url>/2018/07/04/%E9%9D%A2%E5%90%91B%E7%AB%AF%E7%9A%84%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/838058-c8288b701cc6591f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h2 id="源之根本在于商业模式"><a href="#源之根本在于商业模式" class="headerlink" title="源之根本在于商业模式"></a>源之根本在于商业模式</h2><p>消费者业务和企业业务的差异显而易见，因此它们对产品管理方面的要求也截然不同。</p><p>我们很容易能说出消费者业务的一些特征，诸如用户体验、广告盈利、App 内购等等。我们通过提升产品体验，运营市场策略以及各种增长模式来获取用户。当有了足够的用户之后，我们又会根据用户的喜好不断地迭代产品。</p><p>而在企业市场中，产品往往是活在<strong>规模订购</strong>的模式中。销售同事将这种大型复杂的企业软件产品售卖给小部分付费用户，在售卖的过程中，会进行各种资源预算分配的讨论。对于大多数公司来说，购买并开始使用一个新软件是非常庞大的工程，因此企业软件实际上是一种各方利益妥协的结果。</p><p>在企业市场中，一个主要客户就可以进行产品需求变更，这会扰乱原有计划和工期，但 B 端 PM 也不得不接受。毕竟交易非常重要，是盈利的直接来源。</p><p><strong>不过具有讽刺意味的是，尽管 C 端工作中用户大于天，但实际上 B 端 PM 会更接近产品面向的客户。</strong></p><p>对于 B 端 PM 意味着他们必须和销售、市场部门紧密合作，有时候还需要一起去见客户以帮助收集需求和交易。但 PM 毕竟不是销售，所以很多 PM 面临的挑战是如何能专注于长期的产品开发而不会因为销售需求而过分分心。</p><h2 id="▎关于-MVP（最小可行性产品）"><a href="#▎关于-MVP（最小可行性产品）" class="headerlink" title="▎关于 MVP（最小可行性产品）"></a>▎关于 MVP（最小可行性产品）</h2><p>MVP 大家都懂，下面这个小漫画还挺直观的 ~</p><p><img src="http://upload-images.jianshu.io/upload_images/838058-5a7fc15043db302f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>MVP（最小可行性产品）的思路在面向 C 端时好使，但面向 B 端时就行不通了，因为当一家公司要花几十上百万去购买你的产品时，不太可能是看中你的 MVP。</p><p>作为公司方，他们只想要解决他们现在面临的业务问题，销售必须向对方证明自己公司的产品能够解决这些问题。</p><p>所以企业软件通常都很专业，它需要深刻理解用户面临的业务问题，而这反过来又要求 B 端 PM 首先得理解用户的业务。</p><h2 id="▎客户≠用户"><a href="#▎客户≠用户" class="headerlink" title="▎客户≠用户"></a>▎客户≠用户</h2><p>另外，购买者和使用者未必是同一个人，这点也很重要！</p><p>甚至，还存在决策者角色：老板拍板，秘书下单，经理使用。</p><p>企业软件的购买通常涉及到大笔资金，这笔资金的使用一般来说可能需要高级副总裁授权，同时 VP 也要给更高一级的管理层或者董事会说明这项投资的理由。这就是为什么所有企业软件都都会打包成「解决方案」的原因之一了。</p><p>另外，真正的用户其实是业务部门，他们才是一线生产者。</p><p>所以客户和用户分离的这种形态，导致企业软件总是特别不「人性化」。管理员支付的是功能和商业价值，而非漂亮的用户界面。高管们的需求优先级是远高于下属的。</p><p><img src="https://upload-images.jianshu.io/upload_images/838058-3bea3a054ea7304e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>Lotus Notes 是一个数据库产品，其上还绑定了一个电子邮件客户端。没人喜欢这个企业软件的用户体验，但是对于软件提供方 IBM 来说，这依然是一项价值 10 亿美元的业务。因为对于甲方高管来说，这个软件功能齐全，超低风险而且续约费用低。</p><p><strong>最后推荐几个 B 端产品经理 ~</strong></p><ul><li>Adobe’s <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fbenjamingaines" target="_blank" rel="noopener">Ben Gaines</a> and <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fjoedmarti" target="_blank" rel="noopener">Joe Martin</a></li><li>Percolate’s <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fc_sutter" target="_blank" rel="noopener">Carmen Sutter</a></li><li>Constellate Data’s <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fmattlemay" target="_blank" rel="noopener">Matt LeMay</a></li><li>Salesforce’s <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fdanmccall" target="_blank" rel="noopener">Dan McCall</a></li><li>Demandware’s <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fdanmccall" target="_blank" rel="noopener">Vinod Kumar</a></li><li>HubSpot’s <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fjeremycrane" target="_blank" rel="noopener">Jeremy Crane</a> and <a href="https://link.juejin.im?target=https%3A%2F%2Ftwitter.com%2Fgraysky" target="_blank" rel="noopener">Mike Champion</a></li></ul><hr><blockquote><p><strong>原文链接：</strong><a href="https://link.juejin.im?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F36157637" target="_blank" rel="noopener">Product Management for the Enterprise</a></p></blockquote><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
        <tags>
            
            <tag> 产品 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>认识与入门Markdown</title>
      <link href="/2018/07/04/%E8%AE%A4%E8%AF%86%E4%B8%8E%E5%85%A5%E9%97%A8Markdown/"/>
      <url>/2018/07/04/%E8%AE%A4%E8%AF%86%E4%B8%8E%E5%85%A5%E9%97%A8Markdown/</url>
      <content type="html"><![CDATA[<h4 id="导语"><a href="#导语" class="headerlink" title="导语:"></a>导语:</h4><blockquote><h5 id="Markdown-是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown-的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML-标记语言来说，Markdown-可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。"><a href="#Markdown-是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown-的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML-标记语言来说，Markdown-可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。" class="headerlink" title="Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。"></a><a href="http://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">Markdown</a> 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。</h5></blockquote><h3 id="一、认识-Markdown"><a href="#一、认识-Markdown" class="headerlink" title="一、认识 Markdown"></a>一、认识 Markdown</h3><p>在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 <em>Word</em> 或 <em>Pages</em> 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如<a href="http://jianshu.com" target="_blank" rel="noopener">简书</a>）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用 Mou 这类 Markdown 工具进行编辑并直接上传。</p><h3 id="Markdown-官方文档"><a href="#Markdown-官方文档" class="headerlink" title="Markdown 官方文档"></a>Markdown 官方文档</h3><p>· <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">创始人 John Gruber 的 Markdown 语法说明</a><br>· <a href="http://wowubuntu.com/markdown/#list" target="_blank" rel="noopener">Markdown 中文版语法说明</a></p>]]></content>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
